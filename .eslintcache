[{"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\reportWebVitals.ts":"1","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\App.tsx":"2","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\stores\\index.ts":"3","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\reducers\\index.ts":"4","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\components\\Auth.tsx":"5","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\actions\\auth.ts":"6","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\constants\\index.ts":"7","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\reducers\\auth.ts":"8","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\index.tsx":"9","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\components\\StateProvider.tsx":"10","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\components\\MapContainer.tsx":"11","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\actions\\user.ts":"12","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\apis\\map.ts":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":2863,"mtime":1609249532681,"results":"16","hashOfConfig":"15"},{"size":455,"mtime":1609226304772,"results":"17","hashOfConfig":"15"},{"size":257,"mtime":1609240704013,"results":"18","hashOfConfig":"15"},{"size":1966,"mtime":1609254789738,"results":"19","hashOfConfig":"15"},{"size":424,"mtime":1609240328363,"results":"20","hashOfConfig":"15"},{"size":147,"mtime":1609254229741,"results":"21","hashOfConfig":"15"},{"size":690,"mtime":1609240506361,"results":"22","hashOfConfig":"15"},{"size":810,"mtime":1609247759487,"results":"23","hashOfConfig":"15"},{"size":599,"mtime":1609248337130,"results":"24","hashOfConfig":"15"},{"size":1219,"mtime":1609252009617,"results":"25","hashOfConfig":"15"},{"size":334,"mtime":1609254784479,"results":"26","hashOfConfig":"15"},{"size":107,"mtime":1609254149396,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1aozjg3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\reportWebVitals.ts",[],["56","57"],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\App.tsx",["58","59"],"import React, { useState, useContext } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nimport Auth from \"./components/Auth\";\nimport { StateContext } from \"./components/StateProvider\";\nimport MapContainer from \"./components/MapContainer\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: \"auto\",\n    },\n  })\n);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  const { state, setState } = useContext(StateContext);\n  const [open, setOpen] = useState(false);\n\n  const list = (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={() => {\n        setOpen(false);\n      }}\n      onKeyDown={() => {\n        setOpen(false);\n      }}\n    >\n      <List>\n        <ListItem button key=\"Trash\">\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n\n          <ListItemText primary=\"Trash\" />\n        </ListItem>\n      </List>\n\n      <Divider />\n\n      <List>\n        <ListItem button key=\"Spam\">\n          <ListItemIcon>\n            <MailIcon />\n          </ListItemIcon>\n\n          <ListItemText primary=\"Spam\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        anchor=\"left\"\n        open={open}\n        onClose={() => {\n          setOpen(false);\n        }}\n      >\n        {list}\n      </Drawer>\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => {\n              setOpen(true);\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            Lingo Map\n          </Typography>\n\n          <Auth />\n        </Toolbar>\n      </AppBar>\n\n      <MapContainer />\n    </div>\n  );\n}\n","C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\stores\\index.ts",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\reducers\\index.ts",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\components\\Auth.tsx",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\actions\\auth.ts",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\constants\\index.ts",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\reducers\\auth.ts",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\index.tsx",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\components\\StateProvider.tsx",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\components\\MapContainer.tsx",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\actions\\user.ts",[],"C:\\Users\\Aydin\\Desktop\\Projects\\lingo-map\\src\\apis\\map.ts",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":46,"column":11,"nodeType":"66","messageId":"67","endLine":46,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":46,"column":18,"nodeType":"66","messageId":"67","endLine":46,"endColumn":26},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]